#!/usr/bin/env python

import getopt
import sys
import gpgdir


def usage():
    print("""
py-gpgdir; Recursive direction encryption and decryption with GnuPG

[+] Version: $version
    Author:  Fabrice Sommavilla
    URL:     https://github.com/flasomm/py-gpgdir.git

Usage: py-gpgdir -e|-d <directory> [options]

Options:
    -e, --encrypt <directory>   - Recursively encrypt all files in
                                  <directory> and all subdirectories.
    -d, --decrypt <directory>   - Recursively decrypt all files in
                                  <directory> and all subdirectories.
    --sign <directory>          - Recursively sign all files in <directory>
                                  and all subdirectories.
    --verify <directory>        - Recursively verify all GnuPG signatures
                                  in <directory>.
    -K, --Key-id <id>           - Specify GnuPG key ID, or key-matching
                                  string. This overrides the use_key value
                                  in ~/.gpgdirrc
    -D, --Default-key           - Use the key that GnuPG defines as the
                                  default (i.e. the key that is specified
                                  by the default-key option in
                                  ~/.gnupg/options).
    -g, --gnupg-dir <dir>       - Specify a path to a .gnupg directory for
                                  gpg keys (the default is ~/.gnupg if this
                                  option is not used).
    --verbose                   - Run in verbose mode.
    -V, --Version               - print version.
    -h, --help                  - print help.

    """)
    sys.exit()


def main(argv):
    usage_message = 'py-gpgdir -e|-d <directory> [options]'
    option_args = [
        "encrypt=", "decrypt=", "sign=", "verify=", "Key-id=", "Default-key",
        "gnupg-dir=", "user-homedir=", "verbose", "Version", "help"
    ]
    try:
        opts, args = getopt.getopt(argv, "e:d:K:Dg:u:Vh", option_args)
        if len(opts) <= 0:
            print(usage_message)
            exit(1)
    except getopt.GetoptError:
        print(usage_message)
        sys.exit(2)
    for opt, arg in opts:
        if opt == '-h':
            usage()
        elif opt in ("-e", "--encrypt"):
            gpgdir.encrypt_dir(arg)
        elif opt in ("-d", "--decrypt"):
            gpgdir.decrypt_dir(arg)
        elif opt in "--sign":
            usage()
        elif opt in "--verify":
            usage()
        elif opt in ("-K", "--Key-id"):
            usage()
        elif opt in ("-D", "--Default-key"):
            usage()
        elif opt in ("-g", "--gnupg-dir"):
            usage()
        elif opt in ("-u", "--user-homedir"):
            usage()
        elif opt in "--verbose":
            usage()
        elif opt in ("-V", "--Version"):
            usage()
        elif opt in ("-h", "--help"):
            usage()


if __name__ == "__main__":
    main(sys.argv[1:])
